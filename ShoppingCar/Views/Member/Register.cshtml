@model ShoppingCar.Models.Member

@{
    ViewBag.Title = "註冊";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ShoppingCar.App_GlobalResources.MemberResource.RegisterTitle</h2>

@using (Html.BeginForm("Register", "Member", FormMethod.Post, new { @id = "RegisterForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                <p class="text-danger">@ViewBag.RegisterMessage<p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password2, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MemberName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MemberName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MemberName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Create" class="btn btn-default" id="RegSubmit" />
            </div>
        </div>
    </div>
}

<script>
    var RedirectUrl='@Url.Action("Login", "Member")';
    $(document).ready(function () {
        $("#RegSubmit").click(function (event) {
            var data = {
                rMember:{
                    UserID: $("#UserID").val(),
                    Password: $("#Password").val(),
                    Password2: $("#Password2").val(),
                    MemberName: $("#MemberName").val(),
                    Email: $("#Email").val(),
                    Phone: $("#Phone").val()
                }
            }
            var getURL = '@Url.Action("Register", "Member")';
            $.ajax({
                type: "POST",
                url: getURL,
                cache: false,
                async: true,
                data: JSON.stringify(data) ,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response.IsSuccess) {
                        alert(response.RegMessage);
                        window.location.href = RedirectUrl;
                    }
                    else {
                        alert(response.RegMessage);
                    }
                },
                error: function (response) {
                    alert(response.d);
                }
            });
        });
    });

    function onRequestSuccess(response) {
        if (response.result) {
            alert("註冊成功!");
        } else {
            alert(response.ErrorMessage);
        }
    }

</script>

