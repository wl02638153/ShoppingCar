@model ShoppingCar.Models.Product

@{
    ViewBag.Title = "CreateProduct";
}
<head>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.blockUI.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
</head>
<script type="text/javascript">
    function readImg(file) {
        if (file.files && file.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#UploadImg').attr('src', e.target.result);
            };
            reader.readAsDataURL(file.files[0]);
        }
    }
    function Confirm_custom(str) {
        if (confirm(str)) {
            onSubmitBlock();
            return true;
        }
        else {
            return false;
        }
    }
    function onSubmitBlock() {
        $.blockUI({
            message: "請稍等..."
        });
    }
    function buttonShow() {
        $("#ImportFileSubmit").removeAttr("disabled");
    }
</script>
@if (TempData["ResultErrorMessage"] != null)
{
    <script type="text/javascript">
            window.onload = function () {
                alert("@TempData["ResultErrorMessage"]");
            };
    </script>
}

@if (TempData["ExcelResultErrorMessage"] != null)
{
    <script type="text/javascript">
            window.onload = function () {
                alert("@TempData["ExcelResultErrorMessage"]");
            };
    </script>
}
@if (TempData["ImgValidate"] != null)
{
    <script type="text/javascript">
            window.onload = function () {
                alert("@TempData["ImgValidate"]");
            };
    </script>
}
@if (TempData["DBResultErrorMessage"] != null)
{
    <script type="text/javascript">
            window.onload = function () {
                alert("@TempData["DBResultErrorMessage"]");
            };
    </script>
}
<h2>CreateProduct</h2>
<hr />
<h3>資料格式限制</h3>
<p>1.產品編號必須大於2個字元小於15個字元</p>
<p>2.產品編號必須大於2個字元小於15個字元</p>
<p>3.產品說明最多為4000字</p>
<p>4.產品售價介於1~1000000</p>
<p>5.圖片格式限制 jpg,png,jpeg,jfif</p>
<p>
    <a href="~/Excel/ExcelCreateFormat.xlsx">下載Excel格式</a>
</p>
<form method="post" action="InsertProductTest" enctype="multipart/form-data" onsubmit="onSubmitBlock()">
    <div class="form-group">
        <div class="">
            <input type="submit" value="Test" />
            <p>@TempData["InsertProductTest"]</p>
            <div style="overflow:auto;width:50%;height:100px;">@Html.Raw(TempData["InsertProductTestMessage"])</div>
        </div>
    </div>
</form>


<hr />
<form method="post" action="ImportProduct" enctype="multipart/form-data" onsubmit="onSubmitBlock()">
    <h4>透過Excel新增產品</h4>
    <input id="ImportFile" name="ImportFile" type="file" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" onchange="buttonShow()">
    <p></p>
    <div class="form-group">
        <div class="">
            <input type="submit" id="ImportFileSubmit" value="匯入" class="btn btn-default" disabled="disabled" onsubmit="Confirm_custom('確定要匯入嗎?')" />
        </div>
        <p>@TempData["ExcelInsertTime"]</p>
        <div style="overflow:auto;width:50%;height:100px;">@Html.Raw(TempData["ExcelResultMessage"])</div>
    </div>
</form>
<hr />
@using (Html.BeginForm("CreateProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>新增單筆產品</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductID, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>
        <style>
            textarea {
                resize: none;
            }
        </style>
        <div class="form-group">
            @Html.LabelFor(model => model.ProductExplain, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ProductExplain, new { htmlAttributes = new { @class = "form-control" }, cols = "37", rows = "10" })
                @Html.ValidationMessageFor(model => model.ProductExplain, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01", required = "required" } })
                @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProductImg, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="ImgFile" id="ImgFile" accept="image/*" required />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="InsertProduct" id="InsertProduct" value="Create" class="btn btn-default" />

            </div>
        </div>
    </div>
}
